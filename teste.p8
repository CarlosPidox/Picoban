pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--hello! sorry if this is a mess!
--thank you for playing and checking the code out.
--game made by: @carluspedroso

player = {
  x = 0,
  y = 0,
  sprite = 3,
  dir = "down"
}

game = false
splash = true
score = false

lvlnum = 0
sec = 0
min = 0
f = 0
last = 0

walls = {}
boxes = {}
locks = {}
buttons = {}
misc = {}
bg = {}

times = {}
level = {}

lmachine = {}
lasers = {}

function _init()
  cartdata("carlospedroso_picoban_1")
  loadlevel(lvlnum)
  music(0)
end

function _update()
  if game then
    move()
    timer()
  elseif splash then
    if btn(4) and btn(5) then
      music(-1)
      game = true
      splash = false
    end
  end
end

function timer()
  sec += 1 / stat(7)
  if(sec >= 60) then
    min += 1
    sec = 0
  end
end

function move()
  x = player.x
  y = player.y
  canmove = true
  beaten = false
  death = false
  rotator = false
  lopen = false

  if btnp(0) then --left
    x = player.x - 8
    player.dir = "left"
  elseif btnp(1) then --right
    x = player.x + 8
    player.dir = "right"
  elseif btnp(2) then --up
    y = player.y - 8
    player.dir = "up"
  elseif btnp(3) then --down
    y = player.y + 8
    player.dir = "down"
  elseif btnp(4) or btnp(5) then
    restartlevel()
  end

  if x != player.x or y != player.y  then --collision logic
    for w in all(walls) do --wall collision
      if checkcollision(x,y,w) then
        canmove = false
        break
      end
    end
    if canmove then
      for l in all(locks) do --locks collision
        if checkcollision(x,y,l) and not l.open then
          canmove = false
          break
        end
      end
    end
    if canmove then --box logic
      for b in all(boxes) do
        if checkcollision(x,y,b) then
          newx = b.x + (x - player.x )
          newy = b.y + (y - player.y )
          for w in all(walls) do
            if checkcollision(newx,newy,w) then
              canmove = false
            end
          end
          for box in all(boxes) do
            if checkcollision(newx,newy,box) then
              canmove = false
            end
          end
          for l in all(locks) do
            if checkcollision(newx,newy,l) then
              canmove = false
            end
          end
          for m in all(misc) do
            if checkcollision(newx,newy,m) then
              if m.tag == "key" or m.tag =="goal" then
                canmove = false
              elseif m.tag == "rot" then
                rotator = true
              end
            end
          end
          if canmove then
            b.x = newx
            b.y = newy
            sfx(2)
            if b.tag == "box" then
              checkallpressed()
            elseif rotator then
              if b.tag == "refupl" then
                b.tag = "refupr"
                b.sprite = 23
              elseif b.tag =="refupr" then
                b.tag = "refdr"
                b.sprite = 21
              elseif b.tag =="refdr" then
                b.tag = "refdl"
                b.sprite = 22
              elseif b.tag =="refdl" then
                b.tag = "refupl"
                b.sprite = 24
              end
            end
            checklaser()
          end
          break
        end
      end
    end
    if canmove then
      for m in all(misc) do
        if checkcollision(x,y,m) then
          if m.tag == "key" then
            del(misc,m)
            sfx(0)
            openlock("lock",true)
          elseif m.tag == "goal" then
            beaten = true
          elseif m.tag == "spikes" then
            if m.sprite == 9 then
              m.sprite = 10
            else
              death = true;
            end
          end
        end
      end
    end
  end

  if death then
    restartlevel()
  end

  if canmove then
    player.x = x
    player.y = y
  end

  if beaten then
    cleanlevel()
    sfx(1)
    lvlnum += 1
    t = {s = sec, m = min}
    add(times,t)
    sec = 0
    min = 0
    if lvlnum != 15 then
      loadlevel(lvlnum)
    else
      game = false
      score = true
    end
  end
end

function restartlevel()
  canmove = false
  sfx(3)
  cleanlevel()
  loadlevel(lvlnum)
end

function checkallpressed()
  allpressed = false
  for btn in all(buttons) do
    btn.pressed = false
    for box in all(boxes) do
      if checkcollision(btn.x,btn.y,box) then
        btn.pressed = true
      end
    end
  end

  for b in all(buttons) do
    if b.pressed then
      allpressed = true
    else
      allpressed = false
      break
    end
  end

  if allpressed then
    openlock("lockb",true)
  else
    openlock("lockb",false)
  end
end

function openlock(tag,val)
  for l in all(locks) do
    if l.tag == tag then
      if not l.open and val then
        sfx(0)
      end
      l.open = val
    end
  end
end

function cleanlevel()
  for o in all(walls) do
    del(walls,o)
  end
  for o in all(boxes) do
    del(boxes,o)
  end
  for o in all(locks) do
    del(locks,o)
  end
  for o in all(buttons) do
    del(buttons,o)
  end
  for o in all(misc) do
    del(misc,o)
  end
  for o in all(level) do
    del(level,o)
  end
  for o in all (lmachine) do
    del(lmachine,o)
  end
  for o in all (bg) do
    del(bg,o)
  end
end

function checkcollision(x,y,obj)
  if x == obj.x and y == obj.y then
    return true
  else
    return false
  end
end

function loadlevel(lvlnum)
  lgoal = {}
  row = 0

  if lvlnum > 7 then
    row = 1
  end

  for i=0,15 do
    for j=0,15 do
      obj = mget(i - (row * 120 )+ ((lvlnum) * 15), j + (row * 15))
      if obj == 1 then --wall
        w = {x = i * 8, y = j * 8, sprite = 1}
        add(walls, w)
      elseif obj == 2 then --box
        box = {x = i * 8, y = j * 8, sprite = 2, tag = "box"}
        add(boxes, box)
      elseif obj == 3 then --player
        player.x = i * 8
        player.y = j * 8
        player.dir = "down"
      elseif obj == 4 then --goal
        goal = {x = i * 8, y = j * 8, sprite = 4, tag="goal"}
        add(misc, goal)
      elseif obj == 5 then --key
        key = {x = i * 8, y = j * 8, sprite = 5, tag="key"}
        add(misc, key)
      elseif obj == 6 then --lock
        lock = {x = i * 8, y = j * 8, sprite = 6, tag="lock"}
        add(locks, lock)
      elseif obj == 7 then --button
        btn = {x = i * 8, y = j * 8, sprite = 7, pressed = false}
        add(buttons, btn)
      elseif obj == 8 then --buttonlock
        btnl = {x = i * 8, y = j * 8, sprite = 8, open = false, tag="lockb"}
        add(locks, btnl)
      elseif obj == 9 then --spikes
        spike = {x = i * 8, y = j * 8, sprite = 9, tag="spikes"}
        add(misc, spike)
      elseif obj == 11 then --laser left
        laser = {x = i * 8, y = j * 8, sprite = 11, tag="laserl"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lmachine, laser)
      elseif obj == 12 then --laser up
        laser = {x = i * 8, y = j * 8, sprite = 12, tag="laseru"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lmachine, laser)
      elseif obj == 13 then --laser right
        laser = {x = i * 8, y = j * 8, sprite = 13, tag="laserr"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lmachine, laser)
      elseif obj == 14 then --laser down
        laser = {x = i * 8, y = j * 8, sprite = 14, tag="laserd"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lmachine, laser)
      elseif obj == 24 then --ref up left
        ref = {x = i * 8, y = j * 8, sprite = 24, tag="refupl", ref = true}
        add(boxes, ref)
      elseif obj == 23 then --ref up right
        ref = {x = i * 8, y = j * 8, sprite = 23, tag="refupr", ref = true}
        add(boxes, ref)
      elseif obj == 22 then --ref down left
        ref = {x = i * 8, y = j * 8, sprite = 22, tag="refdl", ref = true}
        add(boxes, ref)
      elseif obj == 21 then --ref down right
        ref = {x = i * 8, y = j * 8, sprite = 21, tag="refdr", ref = true}
        add(boxes, ref)
      elseif obj == 27 then --lgoal left
        laser = {x = i * 8, y = j * 8, sprite = 27, tag="lgoall"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lgoal, laser)
      elseif obj == 28 then --lgoal up
        laser = {x = i * 8, y = j * 8, sprite = 28, tag="lgoalu"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lgoal, laser)
      elseif obj == 29 then --lgoal right
        laser = {x = i * 8, y = j * 8, sprite = 29, tag="lgoalr"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lgoal, laser)
      elseif obj == 30 then --lgoal down
        laser = {x = i * 8, y = j * 8, sprite = 30, tag="lgoald"}
        w = {x = i * 8, y = j * 8}
        add(walls, w)
        add(lgoal, laser)
      elseif obj == 25 then --rotator
        rot = {x = i * 8, y = j * 8, sprite = 25, tag="rot"}
        add(misc, rot)
      elseif obj == 26 then --laserlock
        lock = {x = i * 8, y = j * 8, sprite = 26, open = false, tag="llock"}
        add(locks, lock)
      elseif obj == 31 then --glass
        lock = {x = i * 8, y = j * 8, sprite = 31,tag="glass",solid = true}
        add(walls, lock)
      elseif obj == 32 then --background
        b = {x = i * 8, y = j * 8, sprite = 32}
        add(bg, b)
      end
    end
  end

  add(level,walls)
  add(level,misc)
  add(level,buttons)
  add(level,boxes)
  add(level,lmachine)
  add(level,lmachine)
  add(level,lgoal)
  add(level,bg)

  checklaser()
end

function checklaser()
  for l in all(lasers) do --destroy all lasers
    del(lasers, l)
  end

  o = true

  for m in all(lmachine) do --laser logic
    xx = m.x
    yy = m.y
    dir = ""
    stop = false

    if m.tag == "laserr" then
      dir = "right"
    elseif m.tag == "laserl" then
      dir = "left"
    elseif m.tag == "laseru" then
      dir = "up"
    elseif m.tag == "laserd" then
      dir = "down"
    end

    repeat
      if dir == "right" then
        xx = xx + 8
        sprt = 15
      elseif dir == "left" then
        xx = xx - 8
        sprt = 15
      elseif dir == "up" then
        yy = yy - 8
        sprt = 16
      elseif dir == "down" then
        yy = yy + 8
        sprt = 16
      end

      for b in all(boxes) do --box/reflector collision
        if checkcollision(xx,yy,b) then
          if b.tag == "box" then
            stop = true
          elseif b.tag == "refupl" then
            sprt = 19
            if dir == "left" then
              dir = "down"
            elseif dir == "up" then
              dir = "right"
            else
              stop = true;
            end
          elseif b.tag == "refupr" then
            sprt = 20
            if dir == "right" then
              dir = "down"
            elseif dir == "up" then
              dir = "left"
            else
              stop = true;
            end
          elseif b.tag == "refdl" then
            sprt = 17
            if dir == "left" then
              dir = "up"
            elseif dir == "down" then
              dir = "right"
            else
              stop = true;
            end
          elseif b.tag == "refdr" then
            sprt = 18
            if dir == "right" then
              dir = "up"
            elseif dir == "down" then
              dir = "left"
            else
              stop = true;
            end
          end
        end
      end

      if not stop then --check if it hits goal
        for l in all(lgoal) do
          if checkcollision(xx,yy,l) then
            if l.tag == "lgoall" and dir == "right" and o then
              o = true
            elseif l.tag == "lgoalu" and dir == "down" and o then
              o = true
            elseif l.tag == "lgoald" and dir == "up" and o then
              o = true
            elseif l.tag == "lgoalr" and dir == "left" and o then
              o = true
            else
              o = false
            end
            stop = true
            break
          end
        end
      else
        o = false
      end

      if not stop then --wall collision
        for w in all(walls) do
          if checkcollision(xx,yy,w)  and w.tag != "glass" then
            stop = true
            o = false
            break
          end
        end
      end

      if not stop then --lock collision
        for l in all(locks) do
          if checkcollision(xx,yy,l) and not l.open then
            stop = true
            o = false
            break
          end
        end
      end

      if not stop then
        laser = {x = xx, y = yy, sprite = sprt}
        add(lasers,laser)
      end
    until (stop)
  end

  if o then
    openlock("llock",true)
  else
    openlock("llock",false)
  end
end

function _draw()
  cls()
  if game then
    drawlevel()
    drawplayer(0.25)
    drawui()
  elseif splash then
    drawsplash()
  elseif score then
    drawscore()
  end
end

function drawplayer(delay)
  if f <= 0.5 then
    f += 1 / stat(7)
  else
    f = 0
  end

  if player.dir == "up" then
    if f <= delay then
      player.sprite = 39
    else
      player.sprite = 40
    end
  elseif player.dir == "down" then
    if f <= delay then
      player.sprite = 35
    else
      player.sprite = 36
    end
  elseif player.dir == "left" then
    if f <= delay then
      player.sprite = 41
    else
      player.sprite = 42
    end
  elseif player.dir == "right" then
    if f <= delay then
      player.sprite = 37
    else
      player.sprite = 38
    end
  end
  spr(player.sprite, player.x, player.y)
end

function drawscore()
  cls()
  color(7)
  i = 1
  for s in all(times) do
    z = ""
    zm = ""
    if s.s < 10 then
      z = "0"
    end
    if s.m < 10 then
      zm = "0"
    end
    bprint("level "..i..": "..zm..s.m..":"..z..flr(s.s), 8, 8 + ((i - 1) * 8),7,1)
    i += 1
  end
end

function bprint(text,x,y,c,d) --function by nusan https://www.lexaloffle.com/bbs/?tid=3467
	print(text,x-1,y,d)
	print(text,x+1,y,d)
	print(text,x,y-1,d)
	print(text,x,y+1,d)
	print(text,x,y,c)
end

function drawsplash()
  bprint("❎+🅾️",60,64,7,1)
  bprint("carlos pedroso",2,121,7,0)
  spr(43,35,8,7,1)
end

function drawui()
  rectfill(0, 0, 127, 8, 1)
  n = lvlnum + 1
  bprint("level: "..n.."/15",2,2,7,0)
  z = ""
  zm = ""
  xx = 107
  if sec < 10 then
    z = "0"
  end
  if min < 10 then
    zm = "0"
  elseif min >= 100 then
    xx = 103
  end
  bprint(zm..min..":"..z..flr(sec),xx,2,7,0)
  rectfill(0, 119, 127, 127, 1)
  bprint("❎/🅾️ restart",2,121,7,0)
  --bprint(f,2,122,7,0)
end

function drawlevel()
  for k, v in pairs(level) do
    for n, obj in pairs(v) do
      spr(obj.sprite, obj.x, obj.y)
    end
 end

 for l in all(locks) do
   if not l.open then
     spr(l.sprite, l.x, l.y)
   end
 end

  for obj in all(lasers) do
    spr(obj.sprite, obj.x, obj.y);
  end
end

__gfx__
000000009aaaaaaa007777000000000000077000000000009aaaaaaa005555006777777744444444444444446777777767700777677777776777777700000000
070000705999999a027777700999999000777700000000005990099a050000505660066744444444447777445666666756600667566666675666666700000000
007007005999999a228888770aaaaaa003377770090000005900009a500000055600006744444444450660745666666756666667566666675666666700000000
000770005999999a2288887701aaaa10333bb777909999995900009a500000055600006744444444450660740066666756666667566666005666666788888888
000770005999999a2288887701aaaa10333bb7770a000a0a5990099a500000055660066744444444445667440066666756666667566666005666666788888888
007007005999999a228888770aaaaaa003333770000000005990099a500000055660066744444444445667445666666756666667566666675666666700000000
070000705999999a022222700aaaaaa000333700000000005990099a050000505660066744444444445447445666666756666667566666675660066700000000
00000000555555590022220000000000000330000000000055555559005555005555555644444444444444445555555655555556555555565550055600000000
000880000008800000088000000000000000000000000007600000006777777767777777aaaaaaaa67777777677777776771177767777777677777779aa009aa
000880000008800000088000000000000000000000000067560000000666666756666660aa000aaa566116675666666756111167566666675666666759a0099a
000880000008800000088000000000000000000000000667566000000066666756666600a0aaaa0a561111675116666756111167566661175666666755900999
000880000000888888880000000008888880000000006667566600000006666756666000aaaaa00a561111671116666756666667566661115666666700000000
000880000000088888800000000088888888000000066667566660000000666756660000a00aaaaa566116671116666756666667566661115666666700000000
000880000000000000000000000880000008800000666667566666000000066756600000a0aaaa0a56611667511666675666666756666117561111679aa009aa
000880000000000000000000000880000008800006666667566666600000006756000000aaa000aa566116675666666756666667566666675611116759a0059a
000880000000000000000000000880000008800055555556555555560000000650000000aaaaaaaa555555565555555655555556555555565551155655900559
9aaaaaaa111111111111111100000000000000000000000000000000000000000000000000000000000000007777700070000000777700007777700077770000
5999999a111111100111111109999990099999900999999009999990099999900999999009999990099999907000700070000000700000007000700070007700
59aaaa9a11111100001111110aaaaaa0099999900aaaaaa0099999900aaaaaa0099999900aaaaaa0099999907000700070000000700000007000700070000700
59599a9a111110000001111101aaaa100aaaaaa00aaaaa100aaaaaa00aaaaaa00aaaaaa001aaaaa00aaaaaa07777700070000000700000007000700070777700
59599a9a111100000000111101aaaa1001aaaa100aaaaa100aaaaa100aaaaaa00aaaaaa001aaaaa001aaaaa07000000070000000700000007000700070007770
59555a9a11100000000001110aaaaaa001aaaa100aaaaaa00aaaaa100aaaaaa00aaaaaa00aaaaaa001aaaaa07000000070000000700000007000700070000770
5999999a11000000000000110aaaaaa00aaaaaa00aaaaaa00aaaaaa00aaaaaa00aaaaaa00aaaaaa00aaaaaa07000000070000000700000007000700077777700
55555559100000000000000100000000000000000000000000000000000000000000000000000000000000007000000070000000777700007777700070000000
00070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00070000000700700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00707000000707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00707000000707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00777700000707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07707700007070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
07000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000210021000000000000000000000000210021000000000000000000000000210021000000000000000000000000210021000000000000000000000000210021000000000000000000000000210021000000000000000000000000210000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200101010101010101010120000000000000000000000000000000000000000000000000
0000000101010101010101202000000000002020010101010101010100000000000000000000000000000000000000200101010101010101010120000000000000000000000000000000000000202001010101010101012020000000010000010101010101010101000000010101010101010101010101000000000000000000
0000000100010101010101012000000000002001010500020000000100000000002001010101010101012000000000200101000000000000030120000000202001010101010101012020000000200101000100000002030120000000010500010101010101010101000000010101010101010101010101000000000000000000
0000000100000200000005000100000000000101010002000200000100000000000103020701000200040100000000010101000200020102000101000000200101000001000001010120000000010100000202000202020101000000010200010101000804010101000000010109090909090909090101000000000000000000
0000000100000200020202020100000000000101000000020000010100000000000100020701000002000100000000010101000100020002000101000000010401020702070200000120000000010101090100000200000101000000010002010101060101010101000000010109020502090902090101000000000000000000
0000000100020200000000000100000000000101000000010000012000000000000100020701020002020100000000010101070107000700000101000000010801000702070700000120000000010101000001010101000101000000010200010000000120010101000000010109090909090909090101000000000000000000
0000000102010101010106010100000000000101010101010201202000000000000108010101000000020100000000010101000001000101010101000000010000000001000200000120000000010101090901000909010101000000010902010003000101010101000000010109090909090909090101000000000000000000
0000000100012020200104010100000000000120202001000001010100000000000100000001020202020100000000010408000000000101010101000000010000000003000000000120000000010101090200090002010101000000010000010000000000000101000000010101010000000000000101000000000000000000
0000000103012020200101010100000000000120202001030006040100000000000100000000000000000100000000010101000000010101010101000000010101010101010101010120000000010101010101010000000001000000010000010101010002020701000000010408060000000003000101000000000000000000
0000000101010101010101010100000000000101010101010101010100000000002001010101010101012000000000200101010101010101010120000000200101010101010101012020000000200101010101010101040120000000010002000000000202000701000000010101010707000000070101000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200101010101010101010120000000000000000000000000000000000000202001010101010101012020000000010000020002000200010101000000010101010101010101010101000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200101010101010101010120000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0021000000000000000000000000210021000000000000000000000000210000000000000000000000000000000021000000000000000000000000210000000000000000000000000000210021000000000000000000000000210021000000000000000000000000210000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000202001010101010101012020000000000000000000000000000000000000010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000002020010101010101202000000000200101010101010101010420000000002020010101010101202000000000012001000000000000000001000000002020202020202020202000000001010101010101010101010101010000000000000000000000000000000000000000000000
000000200101010101010101200000000000201d000000000000012000000000010101010118170101011a0100000000200e0000000104011e200000000001200100000000000000000100000000200101010101010101200000000120202001010e0e0101202020010000000000000000000000000000000000000000000000
000000010101180000000000010000000000200101000000000001200000000001010000070000000000080100000000011f000000011a01000100000000012001001f191f0016000001000000000100000000000000010100000001202020010100000101202020010000000000000000000000000000000000000000000000
00000001010100000000000001000000000020041a00000000000120000000000101000207000016000017010000000001160000000000001f0100000000012001001f091f000000000100000000010001010101010001010000000101010d0001000001000b0101010000000000000000000000000000000000000000000000
0000000103170000000000000100000000000101010000000000170100000000010102021900000200001501000000000101000000180000000100000000012001001f191f0016000001000000000d000200020002001b0100000001010100090009090009000101010000000000000000000000000000000000000000000000
00000001010100000000010001000000000001031719000018000001000000000101000007000216000000010000000001000000001700001f0100000000012001001f091f0000000001000000000103000200020002010100000001041a00030015160000000101010000000000000000000000000000000000000000000000
000000010d0015011a01011c0100000000000101010000000000000100000000010100000700000003000001000000000109190900000003150100000000012001001f191f0016000c0100000000010100000200000001010000000101011d0018000017001b0101010000000000000000000000000000000000000000000000
000000010101010104010101010000000000200d00000000000015200000000001010001011600000000150100000000010909090000000001010000000001010100000000000000010100000000010101011a010101010100000001200100090000000009000120010000000000000000000000000000000000000000000000
000000200101010101010101200000000000202001010101010120200000000001011c0101010c010101010100000000200101010101010101200000000001041a00000300000000010100000000200101010401010101200000000120010000001c1c0000000120010000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000200101010101010101010120000000002020010101010101202000000000010101000000000000001b01000000002020202020202020202000000001010101010101010101010101010000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000202001010101010101012020000000000000000000000000000000000000010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0101000011050100500f0500e0500e0500e050100501105014050170501a0501c0501e05020050230502505001000050000200003000030000600003000070000400004000040000e0002e00002000210001d000
01010000120501205012050120501105014050180501b0503005030050300502f3002f300050000700007000060000b0000c0000e0000600013000060001c0000600021000230001f000210001d0001f0001c000
000100000105301053020530305304053040500500004000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000855006550045500355003550045500655009550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00190020185501a5501c5501f5521f5521d5501c5501a550185501d5501f5502355223552215501f5501d550185501f55023550245522455223550215501f5502455023550215501f5521f5521d5501c5501a550
011900000c75318500186000c753186530000000000000000c75300000000000c753186530000000000000000c75300000000000c753186530000000000000000c75300000000000c75318653000000000000000
011900003950000000355000000032500000000000000000375000000000000345000000000000365000000039500000003550000000395000000000000000000000000000000000000000000000000000000000
__music__
03 04050644
